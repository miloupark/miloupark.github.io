/*!
 * matter-tools 0.14.0 by @liabru
 * https://github.com/liabru/matter-tools
 * License MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("matter-js")):"function"==typeof define&&define.amd?define("Serializer",["matter-js"],t):"object"==typeof exports?exports.Serializer=t(require("matter-js")):(e.MatterTools=e.MatterTools||{},e.MatterTools.Serializer=t(e.Matter))}(this,(function(e){return function(e){var t={};function r(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(i,o,function(t){return e[t]}.bind(null,o));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/demo/lib/",r(r.s=16)}({0:function(t,r){t.exports=e},16:function(e,t,r){"use strict";const i=e.exports={},o=r(17),n=r(0),s=n.Common,a=n.Engine;i.create=function(){let e=new o({prefix:"$",cleanup:!0});return e.parse=e.resurrect,e},i.clone=function(e,t){var r=e.parse(i.serialise(e,t));return r.id=s.nextId(),r},i.saveState=function(e,t,r){localStorage.setItem(r,i.serialise(e,t.world))},i.loadState=function(e,t,r){var i=e.parse(localStorage.getItem(r));i&&a.merge(t,{world:i})},i.serialise=function(e,t,r){return r=r||0,e.stringify(t,(function(e,t){if(!/^#/.exec(e)&&"number"==typeof t){var r=parseFloat(t.toFixed(3));return 0===r&&0!==t?t:r}return t}),r)}},17:function(e,t){
/**
 * # ResurrectJS
 * @version 1.0.3
 * @license Public Domain
 *
 * ResurrectJS preserves object behavior (prototypes) and reference
 * circularity with a special JSON encoding. Unlike regular JSON,
 * Date, RegExp, DOM objects, and `undefined` are also properly
 * preserved.
 *
 * ## Examples
 *
 * function Foo() {}
 * Foo.prototype.greet = function() { return "hello"; };
 *
 * // Behavior is preserved:
 * var necromancer = new Resurrect();
 * var json = necromancer.stringify(new Foo());
 * var foo = necromancer.resurrect(json);
 * foo.greet();  // => "hello"
 *
 * // References to the same object are preserved:
 * json = necromancer.stringify([foo, foo]);
 * var array = necromancer.resurrect(json);
 * array[0] === array[1];  // => true
 * array[1].greet();  // => "hello"
 *
 * // Dates are restored properly
 * json = necromancer.stringify(new Date());
 * var date = necromancer.resurrect(json);
 * Object.prototype.toString.call(date);  // => "[object Date]"
 *
 * ## Options
 *
 * Options are provided to the constructor as an object with these
 * properties:
 *
 *   prefix ('#'): A prefix string used for temporary properties added
 *     to objects during serialization and deserialization. It is
 *     important that you don't use any properties beginning with this
 *     string. This option must be consistent between both
 *     serialization and deserialization.
 *
 *   cleanup (false): Perform full property cleanup after both
 *     serialization and deserialization using the `delete`
 *     operator. This may cause performance penalties (breaking hidden
 *     classes in V8) on objects that ResurrectJS touches, so enable
 *     with care.
 *
 *   revive (true): Restore behavior (__proto__) to objects that have
 *     been resurrected. If this is set to false during serialization,
 *     resurrection information will not be encoded. You still get
 *     circularity and Date support.
 *
 *   resolver (Resurrect.NamespaceResolver(window)): Converts between
 *     a name and a prototype. Create a custom resolver if your
 *     constructors are not stored in global variables. The resolver
 *     has two methods: getName(object) and getPrototype(string).
 *
 * For example,
 *
 * var necromancer = new Resurrect({
 *     prefix: '__#',
 *     cleanup: true
 * });
 *
 * ## Caveats
 *
 *   * With the default resolver, all constructors must be named and
 *   stored in the global variable under that name. This is required
 *   so that the prototypes can be looked up and reconnected at
 *   resurrection time.
 *
 *   * The wrapper objects Boolean, String, and Number will be
 *   unwrapped. This means extra properties added to these objects
 *   will not be preserved.
 *
 *   * Functions cannot ever be serialized. Resurrect will throw an
 *   error if a function is found when traversing a data structure.
 *
 * @see http://nullprogram.com/blog/2013/03/28/
 */
function r(e){for(var t in this.table=null,this.prefix="#",this.cleanup=!1,this.revive=!0,e)e.hasOwnProperty(t)&&(this[t]=e[t]);this.refcode=this.prefix+"id",this.origcode=this.prefix+"original",this.buildcode=this.prefix+".",this.valuecode=this.prefix+"v"}e.exports=r,r.GLOBAL=(0,eval)("this"),r.escapeRegExp=function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},r.prototype.Error=function(e){this.message=e||"",this.stack=(new Error).stack},r.prototype.Error.prototype=Object.create(Error.prototype),r.prototype.Error.prototype.name="ResurrectError",r.NamespaceResolver=function(e){this.scope=e},r.NamespaceResolver.prototype.getPrototype=function(e){var t=this.scope[e];if(t)return t.prototype;throw new r.prototype.Error("Unknown constructor: "+e)},r.NamespaceResolver.prototype.getName=function(e){var t=e.constructor.name;if(null==t){t=/^\s*function\s*([A-Za-z0-9_$]*)/.exec(e.constructor)[1]}if(""===t){throw new r.prototype.Error("Can't serialize objects with anonymous constructors.")}return"Object"===t||"Array"===t?null:t},r.prototype.resolver=new r.NamespaceResolver(r.GLOBAL),r.Node=function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstChild},r.is=function(e){var t="[object "+e+"]";return function(e){return Object.prototype.toString.call(e)===t}},r.isArray=r.is("Array"),r.isString=r.is("String"),r.isBoolean=r.is("Boolean"),r.isNumber=r.is("Number"),r.isFunction=r.is("Function"),r.isDate=r.is("Date"),r.isRegExp=r.is("RegExp"),r.isObject=r.is("Object"),r.isAtom=function(e){return!r.isObject(e)&&!r.isArray(e)},r.isPrimitive=function(e){return null==e||r.isNumber(e)||r.isString(e)||r.isBoolean(e)},r.prototype.ref=function(e){var t={};return t[this.prefix]=void 0===e?-1:e[this.refcode],t},r.prototype.deref=function(e){return this.table[e[this.prefix]]},r.prototype.tag=function(e){if(this.revive){var t=this.resolver.getName(e);if(t){var r=Object.getPrototypeOf(e);if(this.resolver.getPrototype(t)!==r)throw new this.Error("Constructor mismatch!");e[this.prefix]=t}}return e[this.refcode]=this.table.length,this.table.push(e),e[this.refcode]},r.prototype.builder=function(e,t){var r={};return r[this.buildcode]=e,r[this.valuecode]=t,r},r.prototype.build=function(e){var t=e[this.buildcode].split(/\./).reduce((function(e,t){return e[t]}),r.GLOBAL),i=[null].concat(e[this.valuecode]),o=new(t.bind.apply(t,i));return r.isPrimitive(o)?o.valueOf():o},r.prototype.decode=function(e){if(this.prefix in e)return this.deref(e);if(this.buildcode in e)return this.build(e);throw new this.Error("Unknown encoding.")},r.prototype.isTagged=function(e){return this.refcode in e&&null!=e[this.refcode]},r.prototype.visit=function(e,t,i){if(r.isAtom(e))return t(e);if(this.isTagged(e))return this.ref(e);var o=null;if(r.isArray(e)){o=[],e[this.refcode]=this.tag(o);for(var n=0;n<e.length;n++)o.push(this.visit(e[n],t,i))}else for(var s in o=Object.create(Object.getPrototypeOf(e)),e[this.refcode]=this.tag(o),e){var a=e[s];if(e.hasOwnProperty(s)){if(i&&void 0!==a&&void 0===(a=i.call(e,s,e[s])))continue;o[s]=this.visit(a,t,i)}}return o[this.origcode]=e,this.ref(o)},r.prototype.handleAtom=function(e){var t=r.GLOBAL.Node||function(){};if(r.isFunction(e))throw new this.Error("Can't serialize functions.");if(e instanceof t){var i=new XMLSerializer;return this.builder("Resurrect.Node",[i.serializeToString(e)])}if(r.isDate(e))return this.builder("Date",[e.toISOString()]);if(r.isRegExp(e)){var o=e.toString().match(/\/(.+)\/([gimy]*)/).slice(1);return this.builder("RegExp",o)}return void 0===e?this.ref(void 0):!r.isNumber(e)||!isNaN(e)&&isFinite(e)?e:this.builder("Number",[e.toString()])},r.prototype.replacerWrapper=function(e){var t=new RegExp("^"+r.escapeRegExp(this.prefix));return function(r,i){return t.test(r)?i:e(r,i)}},r.prototype.stringify=function(e,t,i){if(r.isFunction(t))t=this.replacerWrapper(t);else if(r.isArray(t)){var o=t;t=function(e,t){return o.indexOf(e)>=0?t:void 0}}if(r.isAtom(e))return JSON.stringify(this.handleAtom(e),t,i);this.table=[],this.visit(e,this.handleAtom.bind(this),t);for(var n=0;n<this.table.length;n++)this.cleanup?delete this.table[n][this.origcode][this.refcode]:this.table[n][this.origcode][this.refcode]=null,delete this.table[n][this.refcode],delete this.table[n][this.origcode];var s=this.table;return this.table=null,JSON.stringify(s,null,i)},r.prototype.fixPrototype=function(e){if(this.prefix in e){var t=e[this.prefix],r=this.resolver.getPrototype(t);if("__proto__"in e)return e.__proto__=r,this.cleanup&&delete e[this.prefix],e;var i=Object.create(r);for(var o in e)e.hasOwnProperty(o)&&o!==this.prefix&&(i[o]=e[o]);return i}return e},r.prototype.resurrect=function(e){var t=null,i=JSON.parse(e);if(r.isArray(i)){if(this.table=i,this.revive)for(var o=0;o<this.table.length;o++)this.table[o]=this.fixPrototype(this.table[o]);for(o=0;o<this.table.length;o++){var n=this.table[o];for(var s in n)n.hasOwnProperty(s)&&(r.isAtom(n[s])||(n[s]=this.decode(n[s])))}t=this.table[0]}else r.isObject(i)?(this.table=[],t=this.decode(i)):t=i;return this.table=null,t}}})}));